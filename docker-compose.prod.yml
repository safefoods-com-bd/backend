version: "3.8"

services:
  # --- Redis ---
  safefoods-redis:
    image: redis:7
    container_name: safefoods-redis
    restart: always
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_PORT}"
    volumes:
      - safefoods-redis-data:/data
    networks:
      - safefoods-app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  # --- Postgres Database ---
  safefoods-postgres:
    image: postgres:15
    container_name: safefoods-database
    restart: always
    environment:
      POSTGRES_USER: safefoodsuser
      POSTGRES_DB: safefoodsdb
      POSTGRES_PASSWORD: safefoodspassword
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_PORT}"
    volumes:
      - safefoods-pg-data:/var/lib/postgresql/data
    networks:
      - safefoods-app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "safefoodsuser -d safefoodsdb"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # --- Production App ---
  safefoods-app:
    # image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: safefoods-app
    restart: always
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    depends_on:
      safefoods-postgres:
        condition: service_healthy
      safefoods-redis:
        condition: service_healthy
    networks:
      - safefoods-app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  safefoods-pg-data:
    driver: local
  safefoods-redis-data:
    driver: local

networks:
  safefoods-app-network:
    driver: bridge
